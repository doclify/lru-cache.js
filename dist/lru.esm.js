class e{constructor(e,t,s){this.key=e,this.newer=this.older=null,this.update(t,s)}update(e,t){this.value=e,this.expiresAt=t>0?Date.now()+t:null}}export default class{constructor(e){this.config=Object.assign({max:1e3,ttl:0},e||{}),this.entries=Object.create(null),this.newest=this.oldest=null,this.size=0}clear(){this.entries=Object.create(null),this.newest=this.oldest=null,this.size=0}keys(){return Object.keys(this.entries)}has(e){return e in this.entries}get(e){const t=this.entries[e];if(t){if(!(t.expiresAt&&Date.now()>=t.expiresAt))return this.markEntryAsUsed(t),t.value;this.delete(e)}}set(t,s,i){i="number"==typeof i?i:this.config.ttl;let n=this.entries[t];return n?(n.update(s,i),this.markEntryAsUsed(n)):(this.config.max>0&&this.size>=this.config.max&&this.evict(),n=new e(t,s,i),this.entries[t]=n,this.size+=1,this.newest?(this.newest.newer=n,n.older=this.newest):this.oldest=n),this.newest=n,!0}markEntryAsUsed(e){e!==this.newest&&(e.newer&&(e===this.oldest&&(this.oldest=e.newer),e.newer.older=e.older),e.older&&(e.older.newer=e.newer),e.newer=null,e.older=this.newest,this.newest&&(this.newest.newer=e),this.newest=e)}delete(e){const t=this.entries[e];return!!t&&(delete this.entries[e],this.size-=1,null!==t.older&&(t.older.newer=t.newer),null!==t.newer&&(t.newer.older=t.older),this.newest===t&&(this.newest=t.older),this.oldest===t&&(this.oldest=t.newer),t.newer=t.older=null,!0)}evict(){const e=this.oldest;return!!e&&this.delete(e.key)}}